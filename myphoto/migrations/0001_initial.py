# Generated by Django 5.2.7 on 2025-10-21 05:13

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_file', models.CharField(help_text='Original file path from export', max_length=500)),
                ('file_name', models.CharField(help_text='Photo file name', max_length=255)),
                ('directory', models.CharField(help_text='Directory path in export', max_length=500)),
                ('date_time_original_text', models.CharField(blank=True, help_text='Original photo timestamp as text from EXIF', max_length=50, null=True)),
                ('date_time_taken', models.DateTimeField(blank=True, help_text='Timezone-aware datetime when photo was taken (calculated)', null=True)),
                ('gps_latitude', models.DecimalField(blank=True, decimal_places=6, help_text='GPS latitude from EXIF', max_digits=10, null=True)),
                ('gps_longitude', models.DecimalField(blank=True, decimal_places=6, help_text='GPS longitude from EXIF', max_digits=10, null=True)),
                ('gps_altitude', models.DecimalField(blank=True, decimal_places=2, help_text='GPS altitude in meters from EXIF', max_digits=10, null=True)),
                ('cluster_latitude', models.DecimalField(blank=True, decimal_places=6, help_text='Clustered latitude (photos within ~10km radius)', max_digits=10, null=True)),
                ('cluster_longitude', models.DecimalField(blank=True, decimal_places=6, help_text='Clustered longitude (photos within ~10km radius)', max_digits=10, null=True)),
                ('location', models.CharField(blank=True, help_text='Human-readable location name from geocoding', max_length=255, null=True)),
                ('country_code', models.CharField(blank=True, help_text='ISO 3166-1 alpha-2 country code', max_length=2, null=True)),
                ('h3_res_15', models.CharField(blank=True, db_index=True, help_text='H3 resolution 15 (~0.9m²) - street level', max_length=15, null=True)),
                ('h3_res_12', models.CharField(blank=True, db_index=True, help_text='H3 resolution 12 (~0.3km²) - neighborhood level', max_length=15, null=True)),
                ('h3_res_9', models.CharField(blank=True, db_index=True, help_text='H3 resolution 9 (~11km²) - city level', max_length=15, null=True)),
                ('h3_res_6', models.CharField(blank=True, db_index=True, help_text='H3 resolution 6 (~290km²) - region level', max_length=15, null=True)),
                ('h3_res_3', models.CharField(blank=True, db_index=True, help_text='H3 resolution 3 (~12,000km²) - country level', max_length=15, null=True)),
                ('perceptual_hash', models.CharField(blank=True, db_index=True, help_text='pHash for finding duplicates (works across resolutions)', max_length=16, null=True)),
                ('average_hash', models.CharField(blank=True, db_index=True, help_text='aHash for finding similar images (faster, less accurate)', max_length=16, null=True)),
                ('difference_hash', models.CharField(blank=True, db_index=True, help_text='dHash for finding similar images (gradient-based)', max_length=16, null=True)),
                ('exif_meta', models.JSONField(blank=True, help_text='Complete EXIF metadata extracted from photo file', null=True)),
                ('imported_at', models.DateTimeField(auto_now=True, help_text='Last time this photo was processed/imported')),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'photos',
                'ordering': ['-date_time_taken', '-date_time_original_text'],
                'indexes': [models.Index(fields=['date_time_taken'], name='photos_date_ti_c76b14_idx'), models.Index(fields=['file_name'], name='photos_file_na_e3087e_idx'), models.Index(fields=['gps_latitude', 'gps_longitude'], name='photos_gps_lat_a23d28_idx'), models.Index(fields=['cluster_latitude', 'cluster_longitude'], name='photos_cluster_5ad876_idx'), models.Index(fields=['country_code'], name='photos_country_727837_idx'), models.Index(fields=['location'], name='photos_locatio_2c1ba0_idx')],
                'constraints': [models.UniqueConstraint(fields=('source_file',), name='unique_source_file')],
            },
        ),
    ]
